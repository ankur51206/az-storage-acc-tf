name: Deploy Terraform

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  terraform-init:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.4.0'

    - name: Create terraform.tfvars
      run: |
        echo "client_id = \"${{ secrets.ARM_CLIENT_ID }}\"" > terraform.tfvars
        echo "client_secret = \"${{ secrets.ARM_CLIENT_SECRET }}\"" >> terraform.tfvars
        echo "subscription_id = \"${{ secrets.ARM_SUBSCRIPTION_ID }}\"" >> terraform.tfvars
        echo "tenant_id = \"${{ secrets.ARM_TENANT_ID }}\"" >> terraform.tfvars
        cat terraform.tfvars

    - name: Terraform Init
      run: terraform init

    - name: Upload terraform.tfvars
      uses: actions/upload-artifact@v4
      with:
        name: terraform-tfvars
        path: terraform.tfvars

  terraform-plan:
    runs-on: ubuntu-latest
    needs: terraform-init # Ensures this job runs only after terraform-init completes

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.4.0'

    - name: Download terraform.tfvars
      uses: actions/download-artifact@v4
      with:
        name: terraform-tfvars

    - name: Terraform Plan
      run: terraform plan -var-file=terraform.tfvars -out=tfplan

    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: tfplan
